// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PortfolioProject.Data;

#nullable disable

namespace PortfolioProject.Migrations
{
    [DbContext(typeof(PortfolioProjectDbContext))]
    [Migration("20231108182741_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PortfolioProject.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<int?>("InterestId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("InterestId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Blog content",
                            Image = "null",
                            PostDate = new DateTime(2023, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Blog test"
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.BlogCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BlogCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            CategoryId = 1
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.BlogInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("integer");

                    b.Property<int>("InterestId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("InterestId");

                    b.ToTable("BlogInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            InterestId = 1
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Programming Languages"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Web Development"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Database Design"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Project Management"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "UI/UX Design"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Personal Reflections"
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Video Games"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Girlfriend"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Working Out"
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<string>("ProjectStatus")
                        .HasColumnType("text");

                    b.Property<int?>("SkillId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("TechnologyId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Omni-Arena is your one stop shop for \r\n                the greatest fictional battles of all time! Pit some of your\r\n                favorite characters from multiple universes against each other \r\n                and determine who's finally the strongest amongst them all!",
                            EndDate = new DateTime(2023, 7, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Image = "https://i.kym-cdn.com/photos/images/newsfeed/000/993/683/3bc.jpg",
                            Link = "https://github.com/MichaelJames8847/Omni-Arena-Capstone.git",
                            ProjectStatus = "Complete",
                            StartDate = new DateTime(2023, 7, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Omni-Arena"
                        },
                        new
                        {
                            Id = 2,
                            Description = "DigitalDungeon is a platform where gamers can \r\n                come to find out their gaming adventure! Just register, select your\r\n                prefered genres and preferences, and watch the magic unfurl\r\n                as some of the most popular games in history are recommended for your\r\n                pleasure!",
                            EndDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Image = "https://offloadmedia.feverup.com/secretchicago.com/wp-content/uploads/2021/04/23044226/Gaming-Lounge-1024x554.jpg",
                            Link = "https://github.com/MichaelJames8847/DigitalDungeon.git",
                            ProjectStatus = "Complete",
                            StartDate = new DateTime(2023, 10, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "DigitalDungeon"
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.ProjectSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SkillId");

                    b.ToTable("ProjectSkills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProjectId = 1,
                            SkillId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProjectId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            Id = 3,
                            ProjectId = 1,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 4,
                            ProjectId = 1,
                            SkillId = 4
                        },
                        new
                        {
                            Id = 5,
                            ProjectId = 1,
                            SkillId = 5
                        },
                        new
                        {
                            Id = 6,
                            ProjectId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            Id = 7,
                            ProjectId = 2,
                            SkillId = 2
                        },
                        new
                        {
                            Id = 8,
                            ProjectId = 2,
                            SkillId = 3
                        },
                        new
                        {
                            Id = 9,
                            ProjectId = 2,
                            SkillId = 4
                        },
                        new
                        {
                            Id = 10,
                            ProjectId = 2,
                            SkillId = 5
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.ProjectTechnology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("TechnologyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("ProjectTechnologies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProjectId = 1,
                            TechnologyId = 3
                        },
                        new
                        {
                            Id = 2,
                            ProjectId = 1,
                            TechnologyId = 4
                        },
                        new
                        {
                            Id = 3,
                            ProjectId = 1,
                            TechnologyId = 5
                        },
                        new
                        {
                            Id = 4,
                            ProjectId = 1,
                            TechnologyId = 6
                        },
                        new
                        {
                            Id = 5,
                            ProjectId = 2,
                            TechnologyId = 1
                        },
                        new
                        {
                            Id = 6,
                            ProjectId = 2,
                            TechnologyId = 2
                        },
                        new
                        {
                            Id = 7,
                            ProjectId = 2,
                            TechnologyId = 3
                        },
                        new
                        {
                            Id = 8,
                            ProjectId = 2,
                            TechnologyId = 4
                        },
                        new
                        {
                            Id = 9,
                            ProjectId = 2,
                            TechnologyId = 5
                        },
                        new
                        {
                            Id = 10,
                            ProjectId = 2,
                            TechnologyId = 7
                        },
                        new
                        {
                            Id = 11,
                            ProjectId = 2,
                            TechnologyId = 8
                        },
                        new
                        {
                            Id = 12,
                            ProjectId = 2,
                            TechnologyId = 9
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Test-Driven Development(TDD)"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Agile and Scrum Methodologies"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Problem-Solving"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Critical Thinking"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Project Management"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Version Control (Git)"
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.Technology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("TechnologyName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Technologies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TechnologyName = "C#"
                        },
                        new
                        {
                            Id = 2,
                            TechnologyName = "ASP.NET"
                        },
                        new
                        {
                            Id = 3,
                            TechnologyName = "React.js"
                        },
                        new
                        {
                            Id = 4,
                            TechnologyName = "JavaScript"
                        },
                        new
                        {
                            Id = 5,
                            TechnologyName = "CSS"
                        },
                        new
                        {
                            Id = 6,
                            TechnologyName = "HTML"
                        },
                        new
                        {
                            Id = 7,
                            TechnologyName = "PostgreSQL"
                        },
                        new
                        {
                            Id = 8,
                            TechnologyName = "EFCore"
                        },
                        new
                        {
                            Id = 9,
                            TechnologyName = "Reactstrap"
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Github")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("LinkedIn")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "A Short Bio",
                            Email = "jmj6ggggg@gmail.com",
                            FirstName = "Michael",
                            Github = "https://github.com/MichaelJames8847",
                            LastName = "James",
                            LinkedIn = "https://www.linkedin.com/in/michaeljames8847/",
                            PhoneNumber = "615-971-9745",
                            ProfilePic = "https://avatars.githubusercontent.com/u/133455651?v=4"
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.Blog", b =>
                {
                    b.HasOne("PortfolioProject.Models.Category", null)
                        .WithMany("Blogs")
                        .HasForeignKey("CategoryId");

                    b.HasOne("PortfolioProject.Models.Interest", null)
                        .WithMany("Blogs")
                        .HasForeignKey("InterestId");
                });

            modelBuilder.Entity("PortfolioProject.Models.BlogCategory", b =>
                {
                    b.HasOne("PortfolioProject.Models.Blog", "Blog")
                        .WithMany("BlogCategories")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioProject.Models.Category", "Category")
                        .WithMany("BlogCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PortfolioProject.Models.BlogInterest", b =>
                {
                    b.HasOne("PortfolioProject.Models.Blog", "Blog")
                        .WithMany("BlogInterests")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioProject.Models.Interest", "Interest")
                        .WithMany("BlogInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("Interest");
                });

            modelBuilder.Entity("PortfolioProject.Models.Project", b =>
                {
                    b.HasOne("PortfolioProject.Models.Skill", null)
                        .WithMany("Projects")
                        .HasForeignKey("SkillId");

                    b.HasOne("PortfolioProject.Models.Technology", null)
                        .WithMany("Projects")
                        .HasForeignKey("TechnologyId");
                });

            modelBuilder.Entity("PortfolioProject.Models.ProjectSkill", b =>
                {
                    b.HasOne("PortfolioProject.Models.Project", "Project")
                        .WithMany("ProjectSkills")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioProject.Models.Skill", "Skill")
                        .WithMany("ProjectSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("PortfolioProject.Models.ProjectTechnology", b =>
                {
                    b.HasOne("PortfolioProject.Models.Project", "Project")
                        .WithMany("ProjectTechnologies")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioProject.Models.Technology", "Technology")
                        .WithMany("ProjectTechnologies")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Technology");
                });

            modelBuilder.Entity("PortfolioProject.Models.Blog", b =>
                {
                    b.Navigation("BlogCategories");

                    b.Navigation("BlogInterests");
                });

            modelBuilder.Entity("PortfolioProject.Models.Category", b =>
                {
                    b.Navigation("BlogCategories");

                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("PortfolioProject.Models.Interest", b =>
                {
                    b.Navigation("BlogInterests");

                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("PortfolioProject.Models.Project", b =>
                {
                    b.Navigation("ProjectSkills");

                    b.Navigation("ProjectTechnologies");
                });

            modelBuilder.Entity("PortfolioProject.Models.Skill", b =>
                {
                    b.Navigation("ProjectSkills");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("PortfolioProject.Models.Technology", b =>
                {
                    b.Navigation("ProjectTechnologies");

                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
